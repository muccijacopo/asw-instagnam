# application.yml 
---
asw:
  kafka:
    channels:
      ricette:
        in: asw.channel.ricette
      connessioni:
        in: asw.channel.connessioni
    consumer:
      name: Consumer
    groupid: asw-consumer-ricette-seguite
spring:
  application:
    name: ricette-seguite
  cloud:
    consul:
      # host: localhost
      host: consul
      port: 8500
      discovery:
        instanceId: ${spring.application.name}-${spring.cloud.client.hostname}-${random.value}
        healthCheckPath: /actuator/health
        healthCheckInterval: 10s
        # configurazione per effettuare esprimenti, NON USARE UN PRODUZIONE
        # dopo quanto tempo consul deve smettere di restituire servizi che non rispondono all'health check?
#        healthCheckCriticalTimeout: 60s
        # consul deve restituire solo servizi che passano l'health check (default=false)
        queryPassing: true
    loadbalancer:
      ribbon.enabled: false
  datasource:
    url: jdbc:mysql://ricette-seguite-db:3306/instagnam
    username: asw-user
    password: asw-user
  jpa:
    hibernate.ddl-auto: create
    generate-ddl: true
    show-sql: true
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      auto-offset-reset: earliest
      group-id: ${asw.kafka.groupid}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    listener:
      missing-topics-fatal: false

server:
  port: 8080
