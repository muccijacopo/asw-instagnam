# application.yml 
---
spring:
  application:
    name: ricette-seguite
  cloud:
    consul:
      # host: localhost
      host: consul
      port: 8500
      discovery:
        instanceId: ${spring.application.name}-${spring.cloud.client.hostname}-${random.value}
        healthCheckPath: /actuator/health
        healthCheckInterval: 10s
        # configurazione per effettuare esprimenti, NON USARE UN PRODUZIONE
        # dopo quanto tempo consul deve smettere di restituire servizi che non rispondono all'health check?
        healthCheckCriticalTimeout: 60s
        # consul deve restituire solo servizi che passano l'health check (default=false)
        queryPassing: true
    loadbalancer:
      ribbon.enabled: false
  kafka:
    bootstrap-servers: asw-kafka:9092
    consumer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

server:
  # port: ${PORT:${SERVER_PORT:0}}
  port: 8080


asw:
  kafka:
    channel:
      in: ricette
    groupid: ricette-seguite


